// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here
@import "_variables";

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";

// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";

// 6. Include any other optional stylesheet partials as desired; list below is not inclusive of all available stylesheets
@import "../node_modules/bootstrap/scss/utilities";
@import "../node_modules/bootstrap/scss/reboot";
// @import "../node_modules/bootstrap/scss/type";
// @import "../node_modules/bootstrap/scss/images";
// @import "../node_modules/bootstrap/scss/containers";
// @import "../node_modules/bootstrap/scss/grid";
// @import "../node_modules/bootstrap/scss/helpers";
// ...

@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar"; // Requires nav
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal"; // Requires transitions
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas"; // Requires transitions
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
// @import "bootstrap/scss/helpers";
@import "../node_modules/bootstrap/scss/helpers";

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "../node_modules/bootstrap/scss/utilities/api";

// 8. Add additional custom code here

@mixin button-variant-dark(
    $background,
    $border,
    $color: color-contrast($background),
    $hover-background: if(
        $color == $color-contrast-light,
        shade-color($background, $btn-hover-bg-shade-amount),
        tint-color($background, $btn-hover-bg-tint-amount)
    ),
    $hover-border: if(
        $color == $color-contrast-light,
        shade-color($border, $btn-hover-border-shade-amount),
        tint-color($border, $btn-hover-border-tint-amount)
    ),
    $hover-color: color-contrast($hover-background),
    $active-background: if(
        $color == $color-contrast-light,
        shade-color($background, $btn-active-bg-shade-amount),
        tint-color($background, $btn-active-bg-tint-amount)
    ),
    $active-border: if(
        $color == $color-contrast-light,
        shade-color($border, $btn-active-border-shade-amount),
        tint-color($border, $btn-active-border-tint-amount)
    ),
    $active-color: color-contrast($active-background),
    $disabled-background: $background,
    $disabled-border: $border,
    $disabled-color: color-contrast($disabled-background),
) {
    --#{$prefix}btn-color: #{$color};
    --#{$prefix}btn-bg: #{$background};
    --#{$prefix}btn-border-color: #{$border};
    --#{$prefix}btn-hover-color: #{$hover-color};
    --#{$prefix}btn-hover-bg: #{$hover-background};
    --#{$prefix}btn-hover-border-color: #{$hover-border};
    --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix($color, $border, 15%))};
    --#{$prefix}btn-active-color: #{$active-color};
    --#{$prefix}btn-active-bg: #{$active-background};
    --#{$prefix}btn-active-border-color: #{$active-border};
    --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};
    --#{$prefix}btn-disabled-color: #{$disabled-color};
    --#{$prefix}btn-disabled-bg: #{$disabled-background};
    --#{$prefix}btn-disabled-border-color: #{$disabled-border};
}

@include color-mode(dark) {
    .card {
        --bs-card-bg: #18181b;
    }

    .form-control {
        background-color: #18181b;
        border-color: #27272a;
        color: #d4d4d8;

        &:focus {
            background-color: #27272a;
            border-color: #3f3f46;
            color: #d4d4d8;
            box-shadow: 0 0 0 0.25rem rgba(63, 63, 70, 0.25);
        }
    }

    @each $color, $value in $theme-colors-dark {
        .btn-#{$color} {
            @if $color == "light" {
                @include button-variant(
                    $value,
                    $value,
                    $hover-background: shade-color(
                        $value,
                        $btn-hover-bg-shade-amount
                    ),
                    $hover-border: shade-color(
                        $value,
                        $btn-hover-border-shade-amount
                    ),
                    $active-background: shade-color(
                        $value,
                        $btn-active-bg-shade-amount
                    ),
                    $active-border: shade-color(
                        $value,
                        $btn-active-border-shade-amount
                    ),
                );
            } @else if $color == "dark" {
                @include button-variant(
                    $value,
                    $value,
                    $hover-background: tint-color(
                        $value,
                        $btn-hover-bg-tint-amount
                    ),
                    $hover-border: tint-color(
                        $value,
                        $btn-hover-border-tint-amount
                    ),
                    $active-background: tint-color(
                        $value,
                        $btn-active-bg-tint-amount
                    ),
                    $active-border: tint-color(
                        $value,
                        $btn-active-border-tint-amount
                    ),
                );
            } @else {
                @include button-variant(
                    $value,
                    $value,
                    $hover-background: shade-color(
                        $value,
                        $btn-hover-bg-shade-amount
                    ),
                );
            }
        }
    }

    @each $color, $value in $theme-colors-dark {
        .btn-outline-#{$color} {
            @include button-outline-variant($value);
        }
    }
}
